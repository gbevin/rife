apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.7
version = '2.0'

repositories {
    mavenCentral()
}

configurations {
    antlr4
}

dependencies {
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    antlr4 group: 'org.antlr', name: 'antlr4', version: '4.+'
}

task antlrOutputDirCreate << { mkdir(generateGrammarSource.destination) }
task generateGrammarSource(dependsOn: antlrOutputDirCreate, type: JavaExec) {
    description = 'Generates Java sources from Antlr4 grammars.'

    ext {
        destination = "$buildDir/generated-sources/"
    }
    def antlrSource = 'src/main/antlr'

    inputs.dir file(antlrSource)
    outputs.dir file(destination)

    def grammars = fileTree(antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    args = ["-o", "${destination}/com/uwyn/rife/template/antlr", grammars.files].flatten()
}

task antlrMigrateDirCreate << { mkdir(antlrMigrate.destination) }
task antlrMigrate(dependsOn: [antlrMigrateDirCreate, generateGrammarSource], type: Copy) {
    ext {
        destination = "$buildDir/filtered-sources/"
    }

    from generateGrammarSource.destination
    into antlrMigrate.destination
    filter { String line ->
        line.replaceAll("org.antlr.v4", "com.uwyn.rife.antlr4")
    }
}

task antlrTemplate(dependsOn: antlrMigrate) << {
}

compileJava {
    dependsOn antlrTemplate
    source antlrMigrate.destination
}
